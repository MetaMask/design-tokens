"use strict";(self.webpackChunk_metamask_design_tokens=self.webpackChunk_metamask_design_tokens||[]).push([[880],{"./docs/ThemeColors.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DarkThemeColors:()=>DarkThemeColors,LightThemeColors:()=>LightThemeColors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ThemeColors_stories});__webpack_require__("./node_modules/react/index.js");var components=__webpack_require__("./docs/components/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),tokens=__webpack_require__("./src/figma/tokens.json");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",a:"a",strong:"strong",ul:"ul",li:"li",h2:"h2"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Design Tokens/Theme Colors"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"theme-colors-second-tier",children:"Theme Colors (second tier)"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Theme colors take the first tier ",(0,jsx_runtime.jsx)(_components.a,{href:"/docs/colors-brandcolors--default-story",children:(0,jsx_runtime.jsx)(_components.strong,{children:"Brand Colors"})})," and start applying them to high-level applications within the UI. They are considered second tier tokens and can be used in the code directly. Theme colors should be used liberally throughout the codebase and create theme compatibility in your components."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#light-theme-colors",children:"Light Theme Colors"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#dark-theme-colors",children:"Dark Theme Colors"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"light-theme-colors",children:"Light Theme Colors"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Light theme colors to be used in the styles for MetaMask UI."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"colors-themecolors--light-theme-colors"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"dark-theme-colors",children:"Dark Theme Colors"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Dark theme colors for MetaMask UI. They have the same name as Light Theme Colors but different values. If you are using the Light Theme Colors for their intended purpose your UI will be dark theme compatible."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"colors-themecolors--dark-theme-colors"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"references",children:"References"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/cBAUPFMnbv6tHR1J8KvBI2/Brand-Colors?node-id=0%3A1",target:"_blank",rel:"nofollow noopener noreferrer",children:"Figma Brand Colors Library"}),"(internal use only)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/kdFzEC7xzSNw7cXteqgzDW/Light-Theme-Colors?node-id=0%3A1",target:"_blank",rel:"nofollow noopener noreferrer",children:"Figma Light Theme Colors Library"}),"(internal use only)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/rLKsoqpjyoKauYnFDcBIbO/Dark-Theme-Colors?node-id=0%3A1",target:"_blank",rel:"nofollow noopener noreferrer",children:"Figma Dark Theme Colors Library"}),"(internal use only)"]}),"\n"]})]})}const ThemeColors=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},ThemeColors_stories={title:"Colors/ThemeColors",component:components.H4,parameters:{docs:{page:ThemeColors}}},Template=args=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(components.H4,{...args})}),LightThemeColors=Template.bind({});LightThemeColors.args={swatchData:tokens.R2.O,borderColor:tokens.R2.O.border.muted.value,textBackgroundColor:tokens.R2.O.background.default.value,textColor:tokens.R2.O.text.default.value};const DarkThemeColors=Template.bind({});DarkThemeColors.args={swatchData:tokens._4.O,borderColor:tokens._4.O.border.muted.value,textBackgroundColor:tokens._4.O.background.default.value,textColor:tokens._4.O.text.default.value},DarkThemeColors.parameters={backgrounds:{default:"dark",values:[{name:"dark",value:tokens._4.O.background.default.value}]}},DarkThemeColors.decorators=[Story=>(0,jsx_runtime.jsx)("div",{style:{backgroundColor:tokens._4.O.background.default.value,margin:"-1rem",padding:"1rem"},children:(0,jsx_runtime.jsx)(Story,{})})],LightThemeColors.parameters={...LightThemeColors.parameters,docs:{...LightThemeColors.parameters?.docs,source:{originalSource:"args => {\n  return <>\n      <ColorSwatchGroup {...args} />\n    </>;\n}",...LightThemeColors.parameters?.docs?.source}}},DarkThemeColors.parameters={...DarkThemeColors.parameters,docs:{...DarkThemeColors.parameters?.docs,source:{originalSource:"args => {\n  return <>\n      <ColorSwatchGroup {...args} />\n    </>;\n}",...DarkThemeColors.parameters?.docs?.source}}};const __namedExportsOrder=["LightThemeColors","DarkThemeColors"]}}]);